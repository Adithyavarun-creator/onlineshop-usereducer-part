{"ast":null,"code":"import CartItem from \"./CartItem\";\n\nconst reducer = (state, action) => {\n  if (action.type === 'CLEARCART') {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === 'REMOVEITEM') {\n    return { ...state,\n      cart: state.cart.filter(item => item.id !== action.payload)\n    };\n  }\n\n  if (action.type === 'INCREASEITEM') {\n    let tempcart = state.cart.map(items => {\n      if (items.id === action.payload) {\n        return { ...items,\n          amount: items.amount + 1\n        };\n      }\n\n      return items;\n    });\n    return { ...state,\n      cart: tempcart\n    };\n  }\n\n  if (action.type === 'DECREASEITEM') {\n    let tempcart = state.cart.map(items => {\n      if (items.id === action.payload) {\n        return { ...items,\n          amount: items.amount - 1\n        };\n      }\n\n      return items;\n    }).filter(cartitem => cartitem.amount !== 0);\n    return { ...state,\n      cart: tempcart\n    };\n  }\n\n  if (action.type === 'GETTOTALS') {\n    let {\n      total,\n      amount\n    } = state.cart.reduce((carttotal, cartitem) => {\n      console.log(state.cart);\n      const {\n        price,\n        amount\n      } = cartitem; //console.log(price,amount)\n\n      const itemtotal = price * amount;\n      carttotal.total += itemtotal;\n      carttotal.amount += amount;\n      return carttotal;\n    }, {\n      total: 0,\n      amount: 0\n    });\n    total = parseFloat(total.toFixed(2));\n    return { ...state,\n      total,\n      amount\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/usereduer online shopping/src/reducer.js"],"names":["CartItem","reducer","state","action","type","cart","filter","item","id","payload","tempcart","map","items","amount","cartitem","total","reduce","carttotal","console","log","price","itemtotal","parseFloat","toFixed"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC7B,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,IAAI,EAAC;AAFF,KAAP;AAIH;;AAED,MAAGF,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AAC5B,WAAM,EACF,GAAGF,KADD;AAEFG,MAAAA,IAAI,EAACH,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA7C;AAFH,KAAN;AAIH;;AAGD,MAAGN,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,QAAIM,QAAQ,GAAGR,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBC,KAAD,IAAS;AACnC,UAAGA,KAAK,CAACJ,EAAN,KAAaL,MAAM,CAACM,OAAvB,EAA+B;AAC3B,eAAO,EACF,GAAGG,KADD;AAEHC,UAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAe;AAFpB,SAAP;AAIH;;AACD,aAAOD,KAAP;AACH,KARc,CAAf;AASA,WAAM,EACF,GAAGV,KADD;AAEFG,MAAAA,IAAI,EAACK;AAFH,KAAN;AAIH;;AAGD,MAAGP,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,QAAIM,QAAQ,GAAGR,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBC,KAAD,IAAS;AACnC,UAAGA,KAAK,CAACJ,EAAN,KAAaL,MAAM,CAACM,OAAvB,EAA+B;AAC3B,eAAO,EACF,GAAGG,KADD;AAEHC,UAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAe;AAFpB,SAAP;AAIH;;AACD,aAAOD,KAAP;AACH,KARc,EAQZN,MARY,CAQJQ,QAAD,IAAYA,QAAQ,CAACD,MAAT,KAAoB,CAR3B,CAAf;AASA,WAAM,EACF,GAAGX,KADD;AAEFG,MAAAA,IAAI,EAACK;AAFH,KAAN;AAIH;;AAED,MAAGP,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,QAAI;AAACW,MAAAA,KAAD;AAAOF,MAAAA;AAAP,QAAiBX,KAAK,CAACG,IAAN,CAAWW,MAAX,CAAkB,CAACC,SAAD,EAAWH,QAAX,KAAsB;AACzDI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACG,IAAlB;AACA,YAAM;AAACe,QAAAA,KAAD;AAAOP,QAAAA;AAAP,UAAiBC,QAAvB,CAFyD,CAGzD;;AACA,YAAMO,SAAS,GAAGD,KAAK,GAAGP,MAA1B;AACAI,MAAAA,SAAS,CAACF,KAAV,IAAoBM,SAApB;AACAJ,MAAAA,SAAS,CAACJ,MAAV,IAAoBA,MAApB;AACA,aAAOI,SAAP;AACH,KARoB,EAQnB;AACEF,MAAAA,KAAK,EAAC,CADR;AAEEF,MAAAA,MAAM,EAAC;AAFT,KARmB,CAArB;AAYAE,IAAAA,KAAK,GAAGO,UAAU,CAACP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAD,CAAlB;AAEA,WAAM,EACF,GAAGrB,KADD;AAEFa,MAAAA,KAFE;AAGFF,MAAAA;AAHE,KAAN;AAKH;;AAGD,SAAOX,KAAP;AACH,CAzED;;AA2EA,eAAeD,OAAf","sourcesContent":["import CartItem from \"./CartItem\"\r\n\r\n\r\nconst reducer = (state,action) =>{\r\n    if(action.type === 'CLEARCART'){\r\n        return {\r\n            ...state,\r\n            cart:[]\r\n        }\r\n    }\r\n\r\n    if(action.type === 'REMOVEITEM'){\r\n        return{\r\n            ...state,\r\n            cart:state.cart.filter((item)=>item.id !== action.payload)\r\n        }\r\n    }\r\n\r\n\r\n    if(action.type === 'INCREASEITEM'){\r\n        let tempcart = state.cart.map((items)=>{\r\n            if(items.id === action.payload){\r\n                return {\r\n                     ...items,\r\n                    amount: items.amount + 1             \r\n                  }\r\n            }\r\n            return items\r\n        })\r\n        return{\r\n            ...state,\r\n            cart:tempcart\r\n        }\r\n    }\r\n\r\n\r\n    if(action.type === 'DECREASEITEM'){\r\n        let tempcart = state.cart.map((items)=>{\r\n            if(items.id === action.payload){\r\n                return {\r\n                     ...items,\r\n                    amount: items.amount - 1             \r\n                  }\r\n            }\r\n            return items\r\n        }).filter((cartitem)=>cartitem.amount !== 0)\r\n        return{\r\n            ...state,\r\n            cart:tempcart\r\n        }\r\n    }\r\n\r\n    if(action.type === 'GETTOTALS'){\r\n        let {total,amount} = state.cart.reduce((carttotal,cartitem)=>{\r\n            console.log(state.cart)\r\n            const {price,amount} = cartitem;\r\n            //console.log(price,amount)\r\n            const itemtotal = price * amount;\r\n            carttotal.total  += itemtotal\r\n            carttotal.amount += amount\r\n            return carttotal\r\n        },{\r\n            total:0,\r\n            amount:0\r\n        })\r\n        total = parseFloat(total.toFixed(2))\r\n\r\n        return{\r\n            ...state,\r\n            total,\r\n            amount\r\n        }\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}